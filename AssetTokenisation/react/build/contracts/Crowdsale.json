{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rate_",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token_",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wallet_",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/soner/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/ReentrancyGuard.sol",
    "1": "C:/Users/soner/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "2": "C:/Users/soner/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "3": "C:/Users/soner/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
    "4": "C:/Users/soner/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "5": "contracts/Crowdsale.sol"
  },
  "ast": {
    "absolutePath": "contracts/Crowdsale.sol",
    "exportedSymbols": {
      "Address": [
        975
      ],
      "Context": [
        680
      ],
      "Crowdsale": [
        294
      ],
      "IERC20": [
        434
      ],
      "ReentrancyGuard": [
        356
      ],
      "SafeERC20": [
        658
      ]
    },
    "id": 295,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:5"
      },
      {
        "absolutePath": "C:/Users/soner/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 295,
        "sourceUnit": 681,
        "src": "57:51:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/soner/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 295,
        "sourceUnit": 435,
        "src": "109:56:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/soner/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 295,
        "sourceUnit": 659,
        "src": "166:65:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/soner/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 295,
        "sourceUnit": 357,
        "src": "232:62:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 680,
              "src": "1014:7:5"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "1014:7:5"
          },
          {
            "baseName": {
              "id": 9,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 356,
              "src": "1023:15:5"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "1023:15:5"
          }
        ],
        "canonicalName": "Crowdsale",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6,
          "nodeType": "StructuredDocumentation",
          "src": "296:695:5",
          "text": " @title Crowdsale\n @dev Crowdsale is a base contract for managing a token crowdsale,\n allowing investors to purchase tokens with ether. This contract implements\n such functionality in its most fundamental form and can be extended to provide additional\n functionality and/or custom behavior.\n The external interface represents the basic interface for purchasing tokens, and conforms\n the base architecture for crowdsales. It is *not* intended to be modified / overridden.\n The internal interface conforms the extensible and modifiable surface of crowdsales. Override\n the methods to add functionality. Consider using 'super' where appropriate to concatenate\n behavior."
        },
        "fullyImplemented": true,
        "id": 294,
        "linearizedBaseContracts": [
          294,
          356,
          680
        ],
        "name": "Crowdsale",
        "nameLocation": "1001:9:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 14,
            "libraryName": {
              "id": 11,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 658,
              "src": "1051:9:5"
            },
            "nodeType": "UsingForDirective",
            "src": "1045:27:5",
            "typeName": {
              "id": 13,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 434,
                "src": "1065:6:5"
              },
              "referencedDeclaration": 434,
              "src": "1065:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$434",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 17,
            "mutability": "mutable",
            "name": "_token",
            "nameLocation": "1121:6:5",
            "nodeType": "VariableDeclaration",
            "scope": 294,
            "src": "1106:21:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$434",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 16,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 434,
                "src": "1106:6:5"
              },
              "referencedDeclaration": 434,
              "src": "1106:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$434",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 19,
            "mutability": "mutable",
            "name": "_wallet",
            "nameLocation": "1199:7:5",
            "nodeType": "VariableDeclaration",
            "scope": 294,
            "src": "1175:31:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 18,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1175:15:5",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 21,
            "mutability": "mutable",
            "name": "_rate",
            "nameLocation": "1513:5:5",
            "nodeType": "VariableDeclaration",
            "scope": 294,
            "src": "1497:21:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1497:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 23,
            "mutability": "mutable",
            "name": "_weiRaised",
            "nameLocation": "1569:10:5",
            "nodeType": "VariableDeclaration",
            "scope": 294,
            "src": "1553:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1553:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 24,
              "nodeType": "StructuredDocumentation",
              "src": "1586:235:5",
              "text": " Event for token purchase logging\n @param purchaser who paid for the tokens\n @param beneficiary who got the tokens\n @param value weis paid for purchase\n @param amount amount of tokens purchased"
            },
            "id": 34,
            "name": "TokensPurchased",
            "nameLocation": "1832:15:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "purchaser",
                  "nameLocation": "1873:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "1857:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1857:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "1908:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "1892:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1892:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1937:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "1929:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1929:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1960:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "1952:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1952:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1847:125:5"
            },
            "src": "1826:147:5"
          },
          {
            "body": {
              "id": 87,
              "nodeType": "Block",
              "src": "2522:332:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 46,
                          "name": "rate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "2540:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2547:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2540:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43726f776473616c653a20726174652069732030",
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2550:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
                          "typeString": "literal_string \"Crowdsale: rate is 0\""
                        },
                        "value": "Crowdsale: rate is 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
                          "typeString": "literal_string \"Crowdsale: rate is 0\""
                        }
                      ],
                      "id": 45,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2532:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2532:41:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "2532:41:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 58,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 53,
                          "name": "wallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "2591:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 56,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2609:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 55,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2601:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 54,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2601:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2601:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2591:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43726f776473616c653a2077616c6c657420697320746865207a65726f2061646472657373",
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2613:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
                          "typeString": "literal_string \"Crowdsale: wallet is the zero address\""
                        },
                        "value": "Crowdsale: wallet is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
                          "typeString": "literal_string \"Crowdsale: wallet is the zero address\""
                        }
                      ],
                      "id": 52,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2583:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2583:70:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "2583:70:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 65,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42,
                              "src": "2692:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$434",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$434",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 64,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2684:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 63,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2684:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2684:14:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 69,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2710:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 68,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2702:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 67,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2702:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2702:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2684:28:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43726f776473616c653a20746f6b656e20697320746865207a65726f2061646472657373",
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2726:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
                          "typeString": "literal_string \"Crowdsale: token is the zero address\""
                        },
                        "value": "Crowdsale: token is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
                          "typeString": "literal_string \"Crowdsale: token is the zero address\""
                        }
                      ],
                      "id": 62,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2663:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2663:111:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "2663:111:5"
                },
                {
                  "expression": {
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 75,
                      "name": "_rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "2785:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 76,
                      "name": "rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "2793:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2785:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "2785:12:5"
                },
                {
                  "expression": {
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79,
                      "name": "_wallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "2807:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 80,
                      "name": "wallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "2817:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2807:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "2807:16:5"
                },
                {
                  "expression": {
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "2833:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$434",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 84,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "2842:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$434",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2833:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$434",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "2833:14:5"
                }
              ]
            },
            "documentation": {
              "id": 35,
              "nodeType": "StructuredDocumentation",
              "src": "1979:437:5",
              "text": " @param rate Number of token units a buyer gets per wei\n @dev The rate is the conversion between wei and the smallest and indivisible\n token unit. So, if you are using a rate of 1 with a ERC20Detailed token\n with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\n @param wallet Address where collected funds will be forwarded to\n @param token Address of the token being sold"
            },
            "id": 88,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "rate",
                  "nameLocation": "2450:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "2442:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2442:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "wallet",
                  "nameLocation": "2480:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "2464:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2464:15:5",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2503:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "2496:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$434",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 41,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 434,
                      "src": "2496:6:5"
                    },
                    "referencedDeclaration": 434,
                    "src": "2496:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$434",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2432:82:5"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2522:0:5"
            },
            "scope": 294,
            "src": "2421:433:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 97,
              "nodeType": "Block",
              "src": "3170:40:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 93,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 670,
                          "src": "3190:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3190:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 92,
                      "name": "buyTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 192,
                      "src": "3180:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3180:23:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "3180:23:5"
                }
              ]
            },
            "documentation": {
              "id": 89,
              "nodeType": "StructuredDocumentation",
              "src": "2860:278:5",
              "text": " @dev fallback function ***DO NOT OVERRIDE***\n Note that other contracts will transfer funds with a base gas stipend\n of 2300, which is not enough to call buyTokens. Consider calling\n buyTokens directly when purchasing tokens from a contract."
            },
            "id": 98,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3150:2:5"
            },
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3170:0:5"
            },
            "scope": 294,
            "src": "3143:67:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 107,
              "nodeType": "Block",
              "src": "3316:30:5",
              "statements": [
                {
                  "expression": {
                    "id": 105,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17,
                    "src": "3333:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$434",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 104,
                  "id": 106,
                  "nodeType": "Return",
                  "src": "3326:13:5"
                }
              ]
            },
            "documentation": {
              "id": 99,
              "nodeType": "StructuredDocumentation",
              "src": "3216:48:5",
              "text": " @return the token being sold."
            },
            "functionSelector": "d56805e1",
            "id": 108,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "token_",
            "nameLocation": "3278:6:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3284:2:5"
            },
            "returnParameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 108,
                  "src": "3308:6:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$434",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 102,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 101,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 434,
                      "src": "3308:6:5"
                    },
                    "referencedDeclaration": 434,
                    "src": "3308:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$434",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3307:8:5"
            },
            "scope": 294,
            "src": "3269:77:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 116,
              "nodeType": "Block",
              "src": "3479:31:5",
              "statements": [
                {
                  "expression": {
                    "id": 114,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19,
                    "src": "3496:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 113,
                  "id": 115,
                  "nodeType": "Return",
                  "src": "3489:14:5"
                }
              ]
            },
            "documentation": {
              "id": 109,
              "nodeType": "StructuredDocumentation",
              "src": "3352:65:5",
              "text": " @return the address where funds are collected."
            },
            "functionSelector": "c640f350",
            "id": 117,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "wallet_",
            "nameLocation": "3431:7:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3438:2:5"
            },
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 112,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "3462:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3462:15:5",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3461:17:5"
            },
            "scope": 294,
            "src": "3422:88:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 125,
              "nodeType": "Block",
              "src": "3642:29:5",
              "statements": [
                {
                  "expression": {
                    "id": 123,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21,
                    "src": "3659:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 122,
                  "id": 124,
                  "nodeType": "Return",
                  "src": "3652:12:5"
                }
              ]
            },
            "documentation": {
              "id": 118,
              "nodeType": "StructuredDocumentation",
              "src": "3516:74:5",
              "text": " @return the number of token units a buyer gets per wei."
            },
            "functionSelector": "626ff08e",
            "id": 126,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rate_",
            "nameLocation": "3604:5:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3609:2:5"
            },
            "returnParameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 121,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 126,
                  "src": "3633:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3633:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3632:9:5"
            },
            "scope": 294,
            "src": "3595:76:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 134,
              "nodeType": "Block",
              "src": "3785:34:5",
              "statements": [
                {
                  "expression": {
                    "id": 132,
                    "name": "_weiRaised",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23,
                    "src": "3802:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 131,
                  "id": 133,
                  "nodeType": "Return",
                  "src": "3795:17:5"
                }
              ]
            },
            "documentation": {
              "id": 127,
              "nodeType": "StructuredDocumentation",
              "src": "3677:52:5",
              "text": " @return the amount of wei raised."
            },
            "functionSelector": "4042b66f",
            "id": 135,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "weiRaised",
            "nameLocation": "3743:9:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3752:2:5"
            },
            "returnParameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "3776:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3776:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3775:9:5"
            },
            "scope": 294,
            "src": "3734:85:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 191,
              "nodeType": "Block",
              "src": "4144:534:5",
              "statements": [
                {
                  "assignments": [
                    144
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 144,
                      "mutability": "mutable",
                      "name": "weiAmount",
                      "nameLocation": "4162:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 191,
                      "src": "4154:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 143,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4154:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 147,
                  "initialValue": {
                    "expression": {
                      "id": 145,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "4174:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "4174:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4154:29:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 149,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "4214:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 150,
                        "name": "weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "4227:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 148,
                      "name": "_preValidatePurchase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 220,
                      "src": "4193:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) view"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4193:44:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "4193:44:5"
                },
                {
                  "assignments": [
                    154
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 154,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "4304:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 191,
                      "src": "4296:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 153,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4296:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 158,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 156,
                        "name": "weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "4329:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 155,
                      "name": "_getTokenAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 281,
                      "src": "4313:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4313:26:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4296:43:5"
                },
                {
                  "expression": {
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 159,
                      "name": "_weiRaised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "4374:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 160,
                        "name": "_weiRaised",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "4387:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 161,
                        "name": "weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "4400:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4387:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4374:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "4374:35:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 166,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "4437:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 167,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "4450:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 165,
                      "name": "_processPurchase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 259,
                      "src": "4420:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4420:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "4420:37:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 171,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 670,
                          "src": "4488:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4488:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 173,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "4502:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 174,
                        "name": "weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "4515:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 175,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "4526:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 170,
                      "name": "TokensPurchased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "4472:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4472:61:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 177,
                  "nodeType": "EmitStatement",
                  "src": "4467:66:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 179,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "4567:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 180,
                        "name": "weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "4580:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 178,
                      "name": "_updatePurchasingState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 268,
                      "src": "4544:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4544:46:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "4544:46:5"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 183,
                      "name": "_forwardFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 293,
                      "src": "4601:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4601:15:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 185,
                  "nodeType": "ExpressionStatement",
                  "src": "4601:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 187,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "4648:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 188,
                        "name": "weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "4661:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 186,
                      "name": "_postValidatePurchase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "4626:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) view"
                      }
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4626:45:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 190,
                  "nodeType": "ExpressionStatement",
                  "src": "4626:45:5"
                }
              ]
            },
            "documentation": {
              "id": 136,
              "nodeType": "StructuredDocumentation",
              "src": "3825:246:5",
              "text": " @dev low level token purchase ***DO NOT OVERRIDE***\n This function has a non-reentrancy guard, so it shouldn't be called by\n another `nonReentrant` function.\n @param beneficiary Recipient of the token purchase"
            },
            "functionSelector": "ec8ac4d8",
            "id": 192,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 141,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 140,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 355,
                  "src": "4131:12:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "4131:12:5"
              }
            ],
            "name": "buyTokens",
            "nameLocation": "4085:9:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "4103:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "4095:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4095:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4094:21:5"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4144:0:5"
            },
            "scope": 294,
            "src": "4076:602:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 219,
              "nodeType": "Block",
              "src": "5340:326:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 201,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 195,
                          "src": "5371:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5394:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5386:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 202,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5386:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5386:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5371:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43726f776473616c653a2062656e656669636961727920697320746865207a65726f2061646472657373",
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5410:44:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
                          "typeString": "literal_string \"Crowdsale: beneficiary is the zero address\""
                        },
                        "value": "Crowdsale: beneficiary is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
                          "typeString": "literal_string \"Crowdsale: beneficiary is the zero address\""
                        }
                      ],
                      "id": 200,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5350:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5350:114:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 209,
                  "nodeType": "ExpressionStatement",
                  "src": "5350:114:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 211,
                          "name": "weiAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 197,
                          "src": "5482:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5495:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5482:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43726f776473616c653a20776569416d6f756e742069732030",
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5498:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
                          "typeString": "literal_string \"Crowdsale: weiAmount is 0\""
                        },
                        "value": "Crowdsale: weiAmount is 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
                          "typeString": "literal_string \"Crowdsale: weiAmount is 0\""
                        }
                      ],
                      "id": 210,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5474:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5474:52:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 216,
                  "nodeType": "ExpressionStatement",
                  "src": "5474:52:5"
                },
                {
                  "expression": {
                    "id": 217,
                    "name": "this",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": -28,
                    "src": "5536:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Crowdsale_$294",
                      "typeString": "contract Crowdsale"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "5536:4:5"
                }
              ]
            },
            "documentation": {
              "id": 193,
              "nodeType": "StructuredDocumentation",
              "src": "4684:531:5",
              "text": " @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\n Use `super` in contracts that inherit from Crowdsale to extend their validations.\n Example from CappedCrowdsale.sol's _preValidatePurchase method:\n     super._preValidatePurchase(beneficiary, weiAmount);\n     require(weiRaised().add(weiAmount) <= cap);\n @param beneficiary Address performing the token purchase\n @param weiAmount Value in wei involved in the purchase"
            },
            "id": 220,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_preValidatePurchase",
            "nameLocation": "5229:20:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 195,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "5258:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 220,
                  "src": "5250:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5250:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 197,
                  "mutability": "mutable",
                  "name": "weiAmount",
                  "nameLocation": "5279:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 220,
                  "src": "5271:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5271:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5249:40:5"
            },
            "returnParameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5340:0:5"
            },
            "scope": 294,
            "src": "5220:446:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 228,
              "nodeType": "Block",
              "src": "6082:64:5",
              "statements": []
            },
            "documentation": {
              "id": 221,
              "nodeType": "StructuredDocumentation",
              "src": "5672:284:5",
              "text": " @dev Validation of an executed purchase. Observe state and use revert statements to undo rollback when valid\n conditions are not met.\n @param beneficiary Address performing the token purchase\n @param weiAmount Value in wei involved in the purchase"
            },
            "id": 229,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_postValidatePurchase",
            "nameLocation": "5970:21:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 223,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "6000:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "5992:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5992:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 225,
                  "mutability": "mutable",
                  "name": "weiAmount",
                  "nameLocation": "6021:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "6013:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6013:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5991:40:5"
            },
            "returnParameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6082:0:5"
            },
            "scope": 294,
            "src": "5961:185:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 244,
              "nodeType": "Block",
              "src": "6529:62:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 240,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "6559:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 241,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 234,
                        "src": "6572:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 237,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "6539:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$434",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 465,
                      "src": "6539:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$434_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$434_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6539:45:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "6539:45:5"
                }
              ]
            },
            "documentation": {
              "id": 230,
              "nodeType": "StructuredDocumentation",
              "src": "6152:269:5",
              "text": " @dev Source of tokens. Override this method to modify the way in which the crowdsale ultimately gets and sends\n its tokens.\n @param beneficiary Address performing the token purchase\n @param tokenAmount Number of tokens to be emitted"
            },
            "id": 245,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deliverTokens",
            "nameLocation": "6435:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 232,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "6458:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 245,
                  "src": "6450:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 231,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6450:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 234,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "6479:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 245,
                  "src": "6471:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6471:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6449:42:5"
            },
            "returnParameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6529:0:5"
            },
            "scope": 294,
            "src": "6426:165:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 258,
              "nodeType": "Block",
              "src": "6962:57:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 254,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 248,
                        "src": "6987:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 255,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 250,
                        "src": "7000:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 253,
                      "name": "_deliverTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "6972:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6972:40:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "6972:40:5"
                }
              ]
            },
            "documentation": {
              "id": 246,
              "nodeType": "StructuredDocumentation",
              "src": "6597:255:5",
              "text": " @dev Executed when a purchase has been validated and is ready to be executed. Doesn't necessarily emit/send\n tokens.\n @param beneficiary Address receiving the tokens\n @param tokenAmount Number of tokens to be purchased"
            },
            "id": 259,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processPurchase",
            "nameLocation": "6866:16:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 248,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "6891:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "6883:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6883:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 250,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "6912:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "6904:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6904:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6882:42:5"
            },
            "returnParameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6962:0:5"
            },
            "scope": 294,
            "src": "6857:162:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 267,
              "nodeType": "Block",
              "src": "7398:64:5",
              "statements": []
            },
            "documentation": {
              "id": 260,
              "nodeType": "StructuredDocumentation",
              "src": "7025:259:5",
              "text": " @dev Override for extensions that require an internal state to check for validity (current user contributions,\n etc.)\n @param beneficiary Address receiving the tokens\n @param weiAmount Value in wei involved in the purchase"
            },
            "id": 268,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updatePurchasingState",
            "nameLocation": "7298:22:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 262,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "7329:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 268,
                  "src": "7321:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7321:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 264,
                  "mutability": "mutable",
                  "name": "weiAmount",
                  "nameLocation": "7350:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 268,
                  "src": "7342:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 263,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7342:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7320:40:5"
            },
            "returnParameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7398:0:5"
            },
            "scope": 294,
            "src": "7289:173:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 280,
              "nodeType": "Block",
              "src": "7815:41:5",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 276,
                      "name": "weiAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "7832:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 277,
                      "name": "_rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "7844:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7832:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 275,
                  "id": 279,
                  "nodeType": "Return",
                  "src": "7825:24:5"
                }
              ]
            },
            "documentation": {
              "id": 269,
              "nodeType": "StructuredDocumentation",
              "src": "7468:238:5",
              "text": " @dev Override to extend the way in which ether is converted to tokens.\n @param weiAmount Value in wei to be converted into tokens\n @return Number of tokens that can be purchased with the specified _weiAmount"
            },
            "id": 281,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTokenAmount",
            "nameLocation": "7720:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "weiAmount",
                  "nameLocation": "7744:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "7736:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7736:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7735:19:5"
            },
            "returnParameters": {
              "id": 275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 274,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "7802:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 273,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7802:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7801:9:5"
            },
            "scope": 294,
            "src": "7711:145:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 292,
              "nodeType": "Block",
              "src": "7977:44:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 288,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8004:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "8004:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 285,
                        "name": "_wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "7987:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "7987:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7987:27:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 291,
                  "nodeType": "ExpressionStatement",
                  "src": "7987:27:5"
                }
              ]
            },
            "documentation": {
              "id": 282,
              "nodeType": "StructuredDocumentation",
              "src": "7862:76:5",
              "text": " @dev Determines how ETH is stored/forwarded on purchases."
            },
            "id": 293,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_forwardFunds",
            "nameLocation": "7952:13:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7965:2:5"
            },
            "returnParameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7977:0:5"
            },
            "scope": 294,
            "src": "7943:78:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 295,
        "src": "992:7031:5",
        "usedErrors": []
      }
    ],
    "src": "32:7992:5"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161090538038061090583398101604081905261002f9161019b565b6001600055826100865760405162461bcd60e51b815260206004820152601460248201527f43726f776473616c653a2072617465206973203000000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b0382166100ea5760405162461bcd60e51b815260206004820152602560248201527f43726f776473616c653a2077616c6c657420697320746865207a65726f206164604482015264647265737360d81b606482015260840161007d565b6001600160a01b03811661014c5760405162461bcd60e51b8152602060048201526024808201527f43726f776473616c653a20746f6b656e20697320746865207a65726f206164646044820152637265737360e01b606482015260840161007d565b600392909255600280546001600160a01b039283166001600160a01b031991821617909155600180549290931691161790556101de565b6001600160a01b038116811461019857600080fd5b50565b6000806000606084860312156101b057600080fd5b8351925060208401516101c281610183565b60408501519092506101d381610183565b809150509250925092565b610718806101ed6000396000f3fe60806040526004361061004e5760003560e01c80634042b66f14610068578063626ff08e1461008c578063c640f350146100a1578063d56805e1146100d3578063ec8ac4d8146100f157600080fd5b3661006357610061336100ff565b6100ff565b005b600080fd5b34801561007457600080fd5b506004545b6040519081526020015b60405180910390f35b34801561009857600080fd5b50600354610079565b3480156100ad57600080fd5b506002546001600160a01b03165b6040516001600160a01b039091168152602001610083565b3480156100df57600080fd5b506001546001600160a01b03166100bb565b61006161005c3660046105cb565b600260005414156101575760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026000553461016782826101e7565b6000610172826102a1565b905081600454610182919061060a565b60045561018f83826102b7565b60408051838152602081018390526001600160a01b0385169133917f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b910160405180910390a36101dd6102c1565b5050600160005550565b6001600160a01b0382166102505760405162461bcd60e51b815260206004820152602a60248201527f43726f776473616c653a2062656e656669636961727920697320746865207a65604482015269726f206164647265737360b01b606482015260840161014e565b8061029d5760405162461bcd60e51b815260206004820152601960248201527f43726f776473616c653a20776569416d6f756e74206973203000000000000000604482015260640161014e565b5050565b6000600354826102b19190610622565b92915050565b61029d82826102fd565b6002546040516001600160a01b03909116903480156108fc02916000818181858888f193505050501580156102fa573d6000803e3d6000fd5b50565b60015461029d906001600160a01b031683836040516001600160a01b03831660248201526044810182905261037190849063a9059cbb60e01b9060640160408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610376565b505050565b60006103cb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104489092919063ffffffff16565b80519091501561037157808060200190518101906103e99190610641565b6103715760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161014e565b60606104578484600085610461565b90505b9392505050565b6060824710156104c25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161014e565b6001600160a01b0385163b6105195760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161014e565b600080866001600160a01b031685876040516105359190610693565b60006040518083038185875af1925050503d8060008114610572576040519150601f19603f3d011682016040523d82523d6000602084013e610577565b606091505b5091509150610587828286610592565b979650505050505050565b606083156105a157508161045a565b8251156105b15782518084602001fd5b8160405162461bcd60e51b815260040161014e91906106af565b6000602082840312156105dd57600080fd5b81356001600160a01b038116811461045a57600080fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561061d5761061d6105f4565b500190565b600081600019048311821515161561063c5761063c6105f4565b500290565b60006020828403121561065357600080fd5b8151801515811461045a57600080fd5b60005b8381101561067e578181015183820152602001610666565b8381111561068d576000848401525b50505050565b600082516106a5818460208701610663565b9190910192915050565b60208152600082518060208401526106ce816040850160208701610663565b601f01601f1916919091016040019291505056fea2646970667358221220a6a1813a854bc5c28406fecd8a4cd475eab56d9f4c75098350491f6703bece8464736f6c634300080b0033",
  "bytecodeSha1": "d4c032d4737d3faf8dddd6404d915c3073b265ef",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "Crowdsale",
  "coverageMap": {
    "branches": {
      "0": {
        "Crowdsale.buyTokens": {
          "31": [
            2325,
            2344,
            true
          ]
        }
      },
      "1": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "32": [
            3735,
            3756,
            false
          ],
          "33": [
            3819,
            3849,
            true
          ]
        }
      },
      "3": {
        "Address.functionCallWithValue": {
          "28": [
            5145,
            5175,
            true
          ]
        },
        "Address.verifyCallResult": {
          "29": [
            7735,
            7742,
            false
          ],
          "30": [
            7876,
            7897,
            false
          ]
        }
      },
      "4": {},
      "5": {
        "Crowdsale._preValidatePurchase": {
          "26": [
            5371,
            5396,
            true
          ],
          "27": [
            5482,
            5496,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {},
      "1": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "18": [
            3811,
            3896
          ]
        },
        "SafeERC20.safeTransfer": {
          "17": [
            813,
            899
          ]
        }
      },
      "3": {
        "Address.functionCall": {
          "19": [
            4018,
            4077
          ]
        },
        "Address.functionCallWithValue": {
          "20": [
            5137,
            5218
          ],
          "22": [
            5228,
            5288
          ],
          "23": [
            5382,
            5440
          ]
        },
        "Address.isContract": {
          "21": [
            1458,
            1488
          ]
        },
        "Address.verifyCallResult": {
          "24": [
            7758,
            7775
          ],
          "25": [
            8202,
            8222
          ]
        }
      },
      "4": {
        "Context._msgSender": {
          "1": [
            712,
            729
          ]
        }
      },
      "5": {
        "Crowdsale.<receive>": {
          "0": [
            3180,
            3203
          ]
        },
        "Crowdsale._deliverTokens": {
          "16": [
            6539,
            6584
          ]
        },
        "Crowdsale._forwardFunds": {
          "15": [
            7987,
            8014
          ]
        },
        "Crowdsale._getTokenAmount": {
          "13": [
            7825,
            7849
          ]
        },
        "Crowdsale._preValidatePurchase": {
          "11": [
            5350,
            5464
          ],
          "12": [
            5474,
            5526
          ]
        },
        "Crowdsale._processPurchase": {
          "14": [
            6972,
            7012
          ]
        },
        "Crowdsale.buyTokens": {
          "6": [
            4193,
            4237
          ],
          "7": [
            4374,
            4409
          ],
          "8": [
            4420,
            4457
          ],
          "9": [
            4467,
            4533
          ],
          "10": [
            4601,
            4616
          ]
        },
        "Crowdsale.rate_": {
          "3": [
            3652,
            3664
          ]
        },
        "Crowdsale.token_": {
          "5": [
            3326,
            3339
          ]
        },
        "Crowdsale.wallet_": {
          "4": [
            3489,
            3503
          ]
        },
        "Crowdsale.weiRaised": {
          "2": [
            3795,
            3812
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeERC20"
  ],
  "deployedBytecode": "60806040526004361061004e5760003560e01c80634042b66f14610068578063626ff08e1461008c578063c640f350146100a1578063d56805e1146100d3578063ec8ac4d8146100f157600080fd5b3661006357610061336100ff565b6100ff565b005b600080fd5b34801561007457600080fd5b506004545b6040519081526020015b60405180910390f35b34801561009857600080fd5b50600354610079565b3480156100ad57600080fd5b506002546001600160a01b03165b6040516001600160a01b039091168152602001610083565b3480156100df57600080fd5b506001546001600160a01b03166100bb565b61006161005c3660046105cb565b600260005414156101575760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026000553461016782826101e7565b6000610172826102a1565b905081600454610182919061060a565b60045561018f83826102b7565b60408051838152602081018390526001600160a01b0385169133917f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b910160405180910390a36101dd6102c1565b5050600160005550565b6001600160a01b0382166102505760405162461bcd60e51b815260206004820152602a60248201527f43726f776473616c653a2062656e656669636961727920697320746865207a65604482015269726f206164647265737360b01b606482015260840161014e565b8061029d5760405162461bcd60e51b815260206004820152601960248201527f43726f776473616c653a20776569416d6f756e74206973203000000000000000604482015260640161014e565b5050565b6000600354826102b19190610622565b92915050565b61029d82826102fd565b6002546040516001600160a01b03909116903480156108fc02916000818181858888f193505050501580156102fa573d6000803e3d6000fd5b50565b60015461029d906001600160a01b031683836040516001600160a01b03831660248201526044810182905261037190849063a9059cbb60e01b9060640160408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610376565b505050565b60006103cb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104489092919063ffffffff16565b80519091501561037157808060200190518101906103e99190610641565b6103715760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161014e565b60606104578484600085610461565b90505b9392505050565b6060824710156104c25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161014e565b6001600160a01b0385163b6105195760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161014e565b600080866001600160a01b031685876040516105359190610693565b60006040518083038185875af1925050503d8060008114610572576040519150601f19603f3d011682016040523d82523d6000602084013e610577565b606091505b5091509150610587828286610592565b979650505050505050565b606083156105a157508161045a565b8251156105b15782518084602001fd5b8160405162461bcd60e51b815260040161014e91906106af565b6000602082840312156105dd57600080fd5b81356001600160a01b038116811461045a57600080fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561061d5761061d6105f4565b500190565b600081600019048311821515161561063c5761063c6105f4565b500290565b60006020828403121561065357600080fd5b8151801515811461045a57600080fd5b60005b8381101561067e578181015183820152602001610666565b8381111561068d576000848401525b50505050565b600082516106a5818460208701610663565b9190910192915050565b60208152600082518060208401526106ce816040850160208701610663565b601f01601f1916919091016040019291505056fea2646970667358221220a6a1813a854bc5c28406fecd8a4cd475eab56d9f4c75098350491f6703bece8464736f6c634300080b0033",
  "deployedSourceMap": "992:7031:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3180:23;719:10:4;3180:9:5;:23::i;3190:12::-;3180:9;:23::i;:::-;992:7031;;;;;3734:85;;;;;;;;;;-1:-1:-1;3802:10:5;;3734:85;;;160:25:7;;;148:2;133:18;3734:85:5;;;;;;;;3595:76;;;;;;;;;;-1:-1:-1;3659:5:5;;3595:76;;3422:88;;;;;;;;;;-1:-1:-1;3496:7:5;;-1:-1:-1;;;;;3496:7:5;3422:88;;;-1:-1:-1;;;;;376:32:7;;;358:51;;346:2;331:18;3422:88:5;196:219:7;3269:77:5;;;;;;;;;;-1:-1:-1;3333:6:5;;-1:-1:-1;;;;;3333:6:5;3269:77;;4076:602;;;;;;:::i;:::-;1744:1:0;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:0;;1135:2:7;2317:63:0;;;1117:21:7;1174:2;1154:18;;;1147:30;1213:33;1193:18;;;1186:61;1264:18;;2317:63:0;;;;;;;;;1744:1;2455:7;:18;4174:9:5::1;4193:44;4214:11:::0;4174:9;4193:20:::1;:44::i;:::-;4296:14;4313:26;4329:9;4313:15;:26::i;:::-;4296:43;;4400:9;4387:10;;:22;;;;:::i;:::-;4374:10;:35:::0;4420:37:::1;4437:11:::0;4450:6;4420:16:::1;:37::i;:::-;4472:61;::::0;;1732:25:7;;;1788:2;1773:18;;1766:34;;;-1:-1:-1;;;;;4472:61:5;::::1;::::0;719:10:4;;4472:61:5::1;::::0;1705:18:7;4472:61:5::1;;;;;;;4601:15;:13;:15::i;:::-;-1:-1:-1::0;;1701:1:0;2628:7;:22;-1:-1:-1;4076:602:5:o;5220:446::-;-1:-1:-1;;;;;5371:25:5;;5350:114;;;;-1:-1:-1;;;5350:114:5;;2013:2:7;5350:114:5;;;1995:21:7;2052:2;2032:18;;;2025:30;2091:34;2071:18;;;2064:62;-1:-1:-1;;;2142:18:7;;;2135:40;2192:19;;5350:114:5;1811:406:7;5350:114:5;5482:14;5474:52;;;;-1:-1:-1;;;5474:52:5;;2424:2:7;5474:52:5;;;2406:21:7;2463:2;2443:18;;;2436:30;2502:27;2482:18;;;2475:55;2547:18;;5474:52:5;2222:349:7;5474:52:5;5220:446;;:::o;7711:145::-;7802:7;7844:5;;7832:9;:17;;;;:::i;:::-;7825:24;7711:145;-1:-1:-1;;7711:145:5:o;6857:162::-;6972:40;6987:11;7000;6972:14;:40::i;7943:78::-;7987:7;;:27;;-1:-1:-1;;;;;7987:7:5;;;;8004:9;7987:27;;;;;:7;:27;:7;:27;8004:9;7987:7;:27;;;;;;;;;;;;;;;;;;;;;7943:78::o;6426:165::-;6539:6;;:45;;-1:-1:-1;;;;;6539:6:5;6559:11;6572;840:58:2;;-1:-1:-1;;;;;2941:32:7;;840:58:2;;;2923:51:7;2990:18;;;2983:34;;;813:86:2;;833:5;;-1:-1:-1;;;863:23:2;2896:18:7;;840:58:2;;;-1:-1:-1;;840:58:2;;;;;;;;;;;;;;-1:-1:-1;;;;;840:58:2;-1:-1:-1;;;;;;840:58:2;;;;;;;;;;813:19;:86::i;:::-;701:205;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:2;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:2;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:2;;3512:2:7;3811:85:2;;;3494:21:7;3551:2;3531:18;;;3524:30;3590:34;3570:18;;;3563:62;-1:-1:-1;;;3641:18:7;;;3634:40;3691:19;;3811:85:2;3310:406:7;3861:223:3;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:3;;3923:2:7;5137:81:3;;;3905:21:7;3962:2;3942:18;;;3935:30;4001:34;3981:18;;;3974:62;-1:-1:-1;;;4052:18:7;;;4045:36;4098:19;;5137:81:3;3721:402:7;5137:81:3;-1:-1:-1;;;;;1465:19:3;;;5228:60;;;;-1:-1:-1;;;5228:60:3;;4330:2:7;5228:60:3;;;4312:21:7;4369:2;4349:18;;;4342:30;4408:31;4388:18;;;4381:59;4457:18;;5228:60:3;4128:353:7;5228:60:3;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:3;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:3:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:3;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:3;;;;;;;;:::i;642:286:7:-;701:6;754:2;742:9;733:7;729:23;725:32;722:52;;;770:1;767;760:12;722:52;796:23;;-1:-1:-1;;;;;848:31:7;;838:42;;828:70;;894:1;891;884:12;1293:127;1354:10;1349:3;1345:20;1342:1;1335:31;1385:4;1382:1;1375:15;1409:4;1406:1;1399:15;1425:128;1465:3;1496:1;1492:6;1489:1;1486:13;1483:39;;;1502:18;;:::i;:::-;-1:-1:-1;1538:9:7;;1425:128::o;2576:168::-;2616:7;2682:1;2678;2674:6;2670:14;2667:1;2664:21;2659:1;2652:9;2645:17;2641:45;2638:71;;;2689:18;;:::i;:::-;-1:-1:-1;2729:9:7;;2576:168::o;3028:277::-;3095:6;3148:2;3136:9;3127:7;3123:23;3119:32;3116:52;;;3164:1;3161;3154:12;3116:52;3196:9;3190:16;3249:5;3242:13;3235:21;3228:5;3225:32;3215:60;;3271:1;3268;3261:12;4486:258;4558:1;4568:113;4582:6;4579:1;4576:13;4568:113;;;4658:11;;;4652:18;4639:11;;;4632:39;4604:2;4597:10;4568:113;;;4699:6;4696:1;4693:13;4690:48;;;4734:1;4725:6;4720:3;4716:16;4709:27;4690:48;;4486:258;;;:::o;4749:274::-;4878:3;4916:6;4910:13;4932:53;4978:6;4973:3;4966:4;4958:6;4954:17;4932:53;:::i;:::-;5001:16;;;;;4749:274;-1:-1:-1;;4749:274:7:o;5028:383::-;5177:2;5166:9;5159:21;5140:4;5209:6;5203:13;5252:6;5247:2;5236:9;5232:18;5225:34;5268:66;5327:6;5322:2;5311:9;5307:18;5302:2;5294:6;5290:15;5268:66;:::i;:::-;5395:2;5374:15;-1:-1:-1;;5370:29:7;5355:45;;;;5402:2;5351:54;;5028:383;-1:-1:-1;;5028:383:7:o",
  "language": "Solidity",
  "natspec": {
    "details": "Crowdsale is a base contract for managing a token crowdsale, allowing investors to purchase tokens with ether. This contract implements such functionality in its most fundamental form and can be extended to provide additional functionality and/or custom behavior. The external interface represents the basic interface for purchasing tokens, and conforms the base architecture for crowdsales. It is *not* intended to be modified / overridden. The internal interface conforms the extensible and modifiable surface of crowdsales. Override the methods to add functionality. Consider using 'super' where appropriate to concatenate behavior.",
    "events": {
      "TokensPurchased(address,address,uint256,uint256)": {
        "params": {
          "amount": "amount of tokens purchased",
          "beneficiary": "who got the tokens",
          "purchaser": "who paid for the tokens",
          "value": "weis paid for purchase"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "constructor": {
        "details": "The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.",
        "params": {
          "rate": "Number of token units a buyer gets per wei",
          "token": "Address of the token being sold",
          "wallet": "Address where collected funds will be forwarded to"
        }
      },
      "rate_()": {
        "returns": {
          "_0": "the number of token units a buyer gets per wei."
        }
      },
      "token_()": {
        "returns": {
          "_0": "the token being sold."
        }
      },
      "wallet_()": {
        "returns": {
          "_0": "the address where funds are collected."
        }
      },
      "weiRaised()": {
        "returns": {
          "_0": "the amount of wei raised."
        }
      }
    },
    "title": "Crowdsale",
    "version": 1
  },
  "offset": [
    992,
    8023
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4042B66F EQ PUSH2 0x68 JUMPI DUP1 PUSH4 0x626FF08E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0xC640F350 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0xD56805E1 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xEC8AC4D8 EQ PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x63 JUMPI PUSH2 0x61 CALLER PUSH2 0xFF JUMP JUMPDEST PUSH2 0xFF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x79 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x83 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBB JUMP JUMPDEST PUSH2 0x61 PUSH2 0x5C CALLDATASIZE PUSH1 0x4 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x157 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE CALLVALUE PUSH2 0x167 DUP3 DUP3 PUSH2 0x1E7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x172 DUP3 PUSH2 0x2A1 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x4 SLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x60A JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH2 0x18F DUP4 DUP3 PUSH2 0x2B7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 CALLER SWAP2 PUSH32 0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1DD PUSH2 0x2C1 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x250 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43726F776473616C653A2062656E656669636961727920697320746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x14E JUMP JUMPDEST DUP1 PUSH2 0x29D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43726F776473616C653A20776569416D6F756E74206973203000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x14E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD DUP3 PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x622 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29D DUP3 DUP3 PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x29D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x371 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x376 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CB DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x448 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x371 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x641 JUMP JUMPDEST PUSH2 0x371 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x14E JUMP JUMPDEST PUSH1 0x60 PUSH2 0x457 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x461 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x14E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x519 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x14E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x535 SWAP2 SWAP1 PUSH2 0x693 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x572 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x577 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x587 DUP3 DUP3 DUP7 PUSH2 0x592 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x5A1 JUMPI POP DUP2 PUSH2 0x45A JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x5B1 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x45A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x61D JUMPI PUSH2 0x61D PUSH2 0x5F4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x63C JUMPI PUSH2 0x63C PUSH2 0x5F4 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x653 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x45A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x67E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x666 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x68D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x6A5 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x663 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x6CE DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x663 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 LOG1 DUP2 GASPRICE DUP6 0x4B 0xC5 0xC2 DUP5 MOD INVALID 0xCD DUP11 0x4C 0xD4 PUSH22 0xEAB56D9F4C75098350491F6703BECE8464736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        992,
        8023
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "LT",
      "path": "5"
    },
    "9": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4E"
    },
    "12": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "13": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "SHR",
      "path": "5"
    },
    "19": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "DUP1",
      "path": "5"
    },
    "20": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x4042B66F"
    },
    "25": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "EQ",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x68"
    },
    "29": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "30": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "DUP1",
      "path": "5"
    },
    "31": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x626FF08E"
    },
    "36": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "EQ",
      "path": "5"
    },
    "37": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8C"
    },
    "40": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "41": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "DUP1",
      "path": "5"
    },
    "42": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xC640F350"
    },
    "47": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "EQ",
      "path": "5"
    },
    "48": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA1"
    },
    "51": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "52": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "DUP1",
      "path": "5"
    },
    "53": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xD56805E1"
    },
    "58": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "EQ",
      "path": "5"
    },
    "59": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD3"
    },
    "62": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "63": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "DUP1",
      "path": "5"
    },
    "64": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xEC8AC4D8"
    },
    "69": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "EQ",
      "path": "5"
    },
    "70": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF1"
    },
    "73": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "74": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "76": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "DUP1",
      "path": "5"
    },
    "77": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "REVERT",
      "path": "5"
    },
    "78": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "79": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "80": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x63"
    },
    "83": {
      "fn": null,
      "offset": [
        992,
        8023
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "84": {
      "fn": "Crowdsale.<receive>",
      "offset": [
        3180,
        3203
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 0,
      "value": "0x61"
    },
    "87": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 1
    },
    "88": {
      "fn": "Crowdsale.<receive>",
      "offset": [
        3180,
        3189
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFF"
    },
    "91": {
      "fn": "Crowdsale.<receive>",
      "jump": "i",
      "offset": [
        3180,
        3203
      ],
      "op": "JUMP",
      "path": "5"
    },
    "92": {
      "fn": "Crowdsale.<receive>",
      "offset": [
        3190,
        3202
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "93": {
      "fn": "Crowdsale.<receive>",
      "offset": [
        3180,
        3189
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFF"
    },
    "96": {
      "fn": "Crowdsale.<receive>",
      "jump": "i",
      "offset": [
        3180,
        3203
      ],
      "op": "JUMP",
      "path": "5"
    },
    "97": {
      "fn": "Crowdsale.<receive>",
      "offset": [
        3180,
        3203
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "98": {
      "offset": [
        992,
        8023
      ],
      "op": "STOP",
      "path": "5"
    },
    "99": {
      "fn": "Crowdsale.<receive>",
      "offset": [
        992,
        8023
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "100": {
      "fn": "Crowdsale.<receive>",
      "offset": [
        992,
        8023
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "102": {
      "fn": "Crowdsale.<receive>",
      "offset": [
        992,
        8023
      ],
      "op": "DUP1",
      "path": "5"
    },
    "103": {
      "first_revert": true,
      "fn": "Crowdsale.<receive>",
      "offset": [
        992,
        8023
      ],
      "op": "REVERT",
      "path": "5"
    },
    "104": {
      "fn": "Crowdsale.weiRaised",
      "offset": [
        3734,
        3819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "105": {
      "fn": "Crowdsale.weiRaised",
      "offset": [
        3734,
        3819
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "106": {
      "fn": "Crowdsale.weiRaised",
      "offset": [
        3734,
        3819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "107": {
      "fn": "Crowdsale.weiRaised",
      "offset": [
        3734,
        3819
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "108": {
      "fn": "Crowdsale.weiRaised",
      "offset": [
        3734,
        3819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x74"
    },
    "111": {
      "fn": "Crowdsale.weiRaised",
      "offset": [
        3734,
        3819
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "112": {
      "fn": "Crowdsale.weiRaised",
      "offset": [
        3734,
        3819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "114": {
      "fn": "Crowdsale.weiRaised",
      "offset": [
        3734,
        3819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "115": {
      "fn": "Crowdsale.weiRaised",
      "offset": [
        3734,
        3819
      ],
      "op": "REVERT",
      "path": "5"
    },
    "116": {
      "fn": "Crowdsale.weiRaised",
      "offset": [
        3734,
        3819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "117": {
      "op": "POP"
    },
    "118": {
      "fn": "Crowdsale.weiRaised",
      "offset": [
        3802,
        3812
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 2,
      "value": "0x4"
    },
    "120": {
      "fn": "Crowdsale.weiRaised",
      "offset": [
        3802,
        3812
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "121": {
      "fn": "Crowdsale.weiRaised",
      "offset": [
        3734,
        3819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "122": {
      "fn": "Crowdsale.weiRaised",
      "offset": [
        3734,
        3819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "124": {
      "fn": "Crowdsale.weiRaised",
      "offset": [
        3734,
        3819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "125": {
      "op": "SWAP1"
    },
    "126": {
      "op": "DUP2"
    },
    "127": {
      "op": "MSTORE"
    },
    "128": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "130": {
      "op": "ADD"
    },
    "131": {
      "fn": "Crowdsale.weiRaised",
      "offset": [
        3734,
        3819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "132": {
      "fn": "Crowdsale.weiRaised",
      "offset": [
        3734,
        3819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "134": {
      "fn": "Crowdsale.weiRaised",
      "offset": [
        3734,
        3819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "135": {
      "fn": "Crowdsale.weiRaised",
      "offset": [
        3734,
        3819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "136": {
      "fn": "Crowdsale.weiRaised",
      "offset": [
        3734,
        3819
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "137": {
      "fn": "Crowdsale.weiRaised",
      "offset": [
        3734,
        3819
      ],
      "op": "SUB",
      "path": "5"
    },
    "138": {
      "fn": "Crowdsale.weiRaised",
      "offset": [
        3734,
        3819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "139": {
      "fn": "Crowdsale.weiRaised",
      "offset": [
        3734,
        3819
      ],
      "op": "RETURN",
      "path": "5"
    },
    "140": {
      "fn": "Crowdsale.rate_",
      "offset": [
        3595,
        3671
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "141": {
      "fn": "Crowdsale.rate_",
      "offset": [
        3595,
        3671
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "142": {
      "fn": "Crowdsale.rate_",
      "offset": [
        3595,
        3671
      ],
      "op": "DUP1",
      "path": "5"
    },
    "143": {
      "fn": "Crowdsale.rate_",
      "offset": [
        3595,
        3671
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "144": {
      "fn": "Crowdsale.rate_",
      "offset": [
        3595,
        3671
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x98"
    },
    "147": {
      "fn": "Crowdsale.rate_",
      "offset": [
        3595,
        3671
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "148": {
      "fn": "Crowdsale.rate_",
      "offset": [
        3595,
        3671
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "150": {
      "fn": "Crowdsale.rate_",
      "offset": [
        3595,
        3671
      ],
      "op": "DUP1",
      "path": "5"
    },
    "151": {
      "fn": "Crowdsale.rate_",
      "offset": [
        3595,
        3671
      ],
      "op": "REVERT",
      "path": "5"
    },
    "152": {
      "fn": "Crowdsale.rate_",
      "offset": [
        3595,
        3671
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "153": {
      "op": "POP"
    },
    "154": {
      "fn": "Crowdsale.rate_",
      "offset": [
        3659,
        3664
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 3,
      "value": "0x3"
    },
    "156": {
      "fn": "Crowdsale.rate_",
      "offset": [
        3659,
        3664
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "157": {
      "fn": "Crowdsale.rate_",
      "offset": [
        3595,
        3671
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x79"
    },
    "160": {
      "fn": "Crowdsale.rate_",
      "offset": [
        3595,
        3671
      ],
      "op": "JUMP",
      "path": "5"
    },
    "161": {
      "fn": "Crowdsale.wallet_",
      "offset": [
        3422,
        3510
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "162": {
      "fn": "Crowdsale.wallet_",
      "offset": [
        3422,
        3510
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "163": {
      "fn": "Crowdsale.wallet_",
      "offset": [
        3422,
        3510
      ],
      "op": "DUP1",
      "path": "5"
    },
    "164": {
      "fn": "Crowdsale.wallet_",
      "offset": [
        3422,
        3510
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "165": {
      "fn": "Crowdsale.wallet_",
      "offset": [
        3422,
        3510
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAD"
    },
    "168": {
      "fn": "Crowdsale.wallet_",
      "offset": [
        3422,
        3510
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "169": {
      "fn": "Crowdsale.wallet_",
      "offset": [
        3422,
        3510
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "171": {
      "fn": "Crowdsale.wallet_",
      "offset": [
        3422,
        3510
      ],
      "op": "DUP1",
      "path": "5"
    },
    "172": {
      "fn": "Crowdsale.wallet_",
      "offset": [
        3422,
        3510
      ],
      "op": "REVERT",
      "path": "5"
    },
    "173": {
      "fn": "Crowdsale.wallet_",
      "offset": [
        3422,
        3510
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "174": {
      "op": "POP"
    },
    "175": {
      "fn": "Crowdsale.wallet_",
      "offset": [
        3496,
        3503
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 4,
      "value": "0x2"
    },
    "177": {
      "fn": "Crowdsale.wallet_",
      "offset": [
        3496,
        3503
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "184": {
      "op": "SHL"
    },
    "185": {
      "op": "SUB"
    },
    "186": {
      "fn": "Crowdsale.wallet_",
      "offset": [
        3496,
        3503
      ],
      "op": "AND",
      "path": "5"
    },
    "187": {
      "fn": "Crowdsale.wallet_",
      "offset": [
        3422,
        3510
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "188": {
      "fn": "Crowdsale.wallet_",
      "offset": [
        3422,
        3510
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "190": {
      "fn": "Crowdsale.wallet_",
      "offset": [
        3422,
        3510
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "197": {
      "op": "SHL"
    },
    "198": {
      "op": "SUB"
    },
    "199": {
      "op": "SWAP1"
    },
    "200": {
      "op": "SWAP2"
    },
    "201": {
      "op": "AND"
    },
    "202": {
      "op": "DUP2"
    },
    "203": {
      "op": "MSTORE"
    },
    "204": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "206": {
      "op": "ADD"
    },
    "207": {
      "fn": "Crowdsale.wallet_",
      "offset": [
        3422,
        3510
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x83"
    },
    "210": {
      "op": "JUMP"
    },
    "211": {
      "fn": "Crowdsale.token_",
      "offset": [
        3269,
        3346
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "212": {
      "fn": "Crowdsale.token_",
      "offset": [
        3269,
        3346
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "213": {
      "fn": "Crowdsale.token_",
      "offset": [
        3269,
        3346
      ],
      "op": "DUP1",
      "path": "5"
    },
    "214": {
      "fn": "Crowdsale.token_",
      "offset": [
        3269,
        3346
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "215": {
      "fn": "Crowdsale.token_",
      "offset": [
        3269,
        3346
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDF"
    },
    "218": {
      "fn": "Crowdsale.token_",
      "offset": [
        3269,
        3346
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "219": {
      "fn": "Crowdsale.token_",
      "offset": [
        3269,
        3346
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "221": {
      "fn": "Crowdsale.token_",
      "offset": [
        3269,
        3346
      ],
      "op": "DUP1",
      "path": "5"
    },
    "222": {
      "fn": "Crowdsale.token_",
      "offset": [
        3269,
        3346
      ],
      "op": "REVERT",
      "path": "5"
    },
    "223": {
      "fn": "Crowdsale.token_",
      "offset": [
        3269,
        3346
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "224": {
      "op": "POP"
    },
    "225": {
      "fn": "Crowdsale.token_",
      "offset": [
        3333,
        3339
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 5,
      "value": "0x1"
    },
    "227": {
      "fn": "Crowdsale.token_",
      "offset": [
        3333,
        3339
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "234": {
      "op": "SHL"
    },
    "235": {
      "op": "SUB"
    },
    "236": {
      "fn": "Crowdsale.token_",
      "offset": [
        3333,
        3339
      ],
      "op": "AND",
      "path": "5"
    },
    "237": {
      "fn": "Crowdsale.token_",
      "offset": [
        3269,
        3346
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBB"
    },
    "240": {
      "fn": "Crowdsale.token_",
      "offset": [
        3269,
        3346
      ],
      "op": "JUMP",
      "path": "5"
    },
    "241": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4076,
        4678
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "242": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4076,
        4678
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x61"
    },
    "245": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4076,
        4678
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5C"
    },
    "248": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4076,
        4678
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "249": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4076,
        4678
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "251": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4076,
        4678
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5CB"
    },
    "254": {
      "fn": "Crowdsale.buyTokens",
      "jump": "i",
      "offset": [
        4076,
        4678
      ],
      "op": "JUMP",
      "path": "5"
    },
    "255": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4076,
        4678
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "256": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "258": {
      "offset": [
        2325,
        2332
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "260": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "261": {
      "offset": [
        2325,
        2344
      ],
      "op": "EQ",
      "path": "0"
    },
    "262": {
      "branch": 31,
      "fn": "Crowdsale.buyTokens",
      "offset": [
        2325,
        2344
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "263": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x157"
    },
    "266": {
      "branch": 31,
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "267": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "269": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "270": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "274": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "276": {
      "op": "SHL"
    },
    "277": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "0"
    },
    "278": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "279": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "281": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "283": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "0"
    },
    "284": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "0"
    },
    "285": {
      "op": "MSTORE"
    },
    "286": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "288": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "290": {
      "op": "DUP3"
    },
    "291": {
      "op": "ADD"
    },
    "292": {
      "op": "MSTORE"
    },
    "293": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "326": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "328": {
      "op": "DUP3"
    },
    "329": {
      "op": "ADD"
    },
    "330": {
      "op": "MSTORE"
    },
    "331": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "333": {
      "op": "ADD"
    },
    "334": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "335": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "337": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "338": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "339": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        2317,
        2380
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "340": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        2317,
        2380
      ],
      "op": "SUB",
      "path": "0"
    },
    "341": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        2317,
        2380
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "342": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        2317,
        2380
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "343": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "344": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "346": {
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "348": {
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "349": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4174,
        4183
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "350": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4193,
        4237
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 6,
      "value": "0x167"
    },
    "353": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4214,
        4225
      ],
      "op": "DUP3",
      "path": "5"
    },
    "354": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4174,
        4183
      ],
      "op": "DUP3",
      "path": "5"
    },
    "355": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4193,
        4213
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E7"
    },
    "358": {
      "fn": "Crowdsale.buyTokens",
      "jump": "i",
      "offset": [
        4193,
        4237
      ],
      "op": "JUMP",
      "path": "5"
    },
    "359": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4193,
        4237
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "360": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4296,
        4310
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "362": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4313,
        4339
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x172"
    },
    "365": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4329,
        4338
      ],
      "op": "DUP3",
      "path": "5"
    },
    "366": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4313,
        4328
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A1"
    },
    "369": {
      "fn": "Crowdsale.buyTokens",
      "jump": "i",
      "offset": [
        4313,
        4339
      ],
      "op": "JUMP",
      "path": "5"
    },
    "370": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4313,
        4339
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "371": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4296,
        4339
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "372": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4296,
        4339
      ],
      "op": "POP",
      "path": "5"
    },
    "373": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4400,
        4409
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 7
    },
    "374": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4387,
        4397
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "376": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4387,
        4397
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "377": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4387,
        4409
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x182"
    },
    "380": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4387,
        4409
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "381": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4387,
        4409
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "382": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4387,
        4409
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x60A"
    },
    "385": {
      "fn": "Crowdsale.buyTokens",
      "jump": "i",
      "offset": [
        4387,
        4409
      ],
      "op": "JUMP",
      "path": "5"
    },
    "386": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4387,
        4409
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "387": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4374,
        4384
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "389": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4374,
        4409
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "390": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4420,
        4457
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 8,
      "value": "0x18F"
    },
    "393": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4437,
        4448
      ],
      "op": "DUP4",
      "path": "5"
    },
    "394": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4450,
        4456
      ],
      "op": "DUP3",
      "path": "5"
    },
    "395": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4420,
        4436
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B7"
    },
    "398": {
      "fn": "Crowdsale.buyTokens",
      "jump": "i",
      "offset": [
        4420,
        4457
      ],
      "op": "JUMP",
      "path": "5"
    },
    "399": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4420,
        4457
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "400": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4472,
        4533
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 9,
      "value": "0x40"
    },
    "402": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4472,
        4533
      ],
      "op": "DUP1",
      "path": "5"
    },
    "403": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4472,
        4533
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "404": {
      "op": "DUP4"
    },
    "405": {
      "op": "DUP2"
    },
    "406": {
      "op": "MSTORE"
    },
    "407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "409": {
      "op": "DUP2"
    },
    "410": {
      "op": "ADD"
    },
    "411": {
      "op": "DUP4"
    },
    "412": {
      "op": "SWAP1"
    },
    "413": {
      "op": "MSTORE"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "418": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "420": {
      "op": "SHL"
    },
    "421": {
      "op": "SUB"
    },
    "422": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4472,
        4533
      ],
      "op": "DUP6",
      "path": "5"
    },
    "423": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4472,
        4533
      ],
      "op": "AND",
      "path": "5"
    },
    "424": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4472,
        4533
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "425": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "426": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "427": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4472,
        4533
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B"
    },
    "460": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4472,
        4533
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "461": {
      "op": "ADD"
    },
    "462": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4472,
        4533
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "464": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4472,
        4533
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "465": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4472,
        4533
      ],
      "op": "DUP1",
      "path": "5"
    },
    "466": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4472,
        4533
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "467": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4472,
        4533
      ],
      "op": "SUB",
      "path": "5"
    },
    "468": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4472,
        4533
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "469": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4472,
        4533
      ],
      "op": "LOG3",
      "path": "5"
    },
    "470": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4601,
        4616
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 10,
      "value": "0x1DD"
    },
    "473": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4601,
        4614
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C1"
    },
    "476": {
      "fn": "Crowdsale.buyTokens",
      "jump": "i",
      "offset": [
        4601,
        4616
      ],
      "op": "JUMP",
      "path": "5"
    },
    "477": {
      "fn": "Crowdsale.buyTokens",
      "offset": [
        4601,
        4616
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "478": {
      "op": "POP"
    },
    "479": {
      "op": "POP"
    },
    "480": {
      "offset": [
        1701,
        1702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "482": {
      "offset": [
        2628,
        2635
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "484": {
      "offset": [
        2628,
        2650
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "485": {
      "op": "POP"
    },
    "486": {
      "fn": "Crowdsale.buyTokens",
      "jump": "o",
      "offset": [
        4076,
        4678
      ],
      "op": "JUMP",
      "path": "5"
    },
    "487": {
      "fn": "Crowdsale._preValidatePurchase",
      "offset": [
        5220,
        5666
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "492": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "494": {
      "op": "SHL"
    },
    "495": {
      "op": "SUB"
    },
    "496": {
      "fn": "Crowdsale._preValidatePurchase",
      "offset": [
        5371,
        5396
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 11
    },
    "497": {
      "branch": 26,
      "fn": "Crowdsale._preValidatePurchase",
      "offset": [
        5371,
        5396
      ],
      "op": "AND",
      "path": "5"
    },
    "498": {
      "fn": "Crowdsale._preValidatePurchase",
      "offset": [
        5350,
        5464
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x250"
    },
    "501": {
      "branch": 26,
      "fn": "Crowdsale._preValidatePurchase",
      "offset": [
        5350,
        5464
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "502": {
      "fn": "Crowdsale._preValidatePurchase",
      "offset": [
        5350,
        5464
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "504": {
      "fn": "Crowdsale._preValidatePurchase",
      "offset": [
        5350,
        5464
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "505": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "509": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "511": {
      "op": "SHL"
    },
    "512": {
      "fn": "Crowdsale._preValidatePurchase",
      "offset": [
        5350,
        5464
      ],
      "op": "DUP2",
      "path": "5"
    },
    "513": {
      "fn": "Crowdsale._preValidatePurchase",
      "offset": [
        5350,
        5464
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "514": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "516": {
      "fn": "Crowdsale._preValidatePurchase",
      "offset": [
        5350,
        5464
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "518": {
      "fn": "Crowdsale._preValidatePurchase",
      "offset": [
        5350,
        5464
      ],
      "op": "DUP3",
      "path": "5"
    },
    "519": {
      "fn": "Crowdsale._preValidatePurchase",
      "offset": [
        5350,
        5464
      ],
      "op": "ADD",
      "path": "5"
    },
    "520": {
      "op": "MSTORE"
    },
    "521": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "523": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "525": {
      "op": "DUP3"
    },
    "526": {
      "op": "ADD"
    },
    "527": {
      "op": "MSTORE"
    },
    "528": {
      "op": "PUSH32",
      "value": "0x43726F776473616C653A2062656E656669636961727920697320746865207A65"
    },
    "561": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "563": {
      "op": "DUP3"
    },
    "564": {
      "op": "ADD"
    },
    "565": {
      "op": "MSTORE"
    },
    "566": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "577": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "579": {
      "op": "SHL"
    },
    "580": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "582": {
      "op": "DUP3"
    },
    "583": {
      "op": "ADD"
    },
    "584": {
      "op": "MSTORE"
    },
    "585": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "587": {
      "op": "ADD"
    },
    "588": {
      "fn": "Crowdsale._preValidatePurchase",
      "offset": [
        5350,
        5464
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14E"
    },
    "591": {
      "op": "JUMP"
    },
    "592": {
      "fn": "Crowdsale._preValidatePurchase",
      "offset": [
        5350,
        5464
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "593": {
      "branch": 27,
      "fn": "Crowdsale._preValidatePurchase",
      "offset": [
        5482,
        5496
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 12
    },
    "594": {
      "fn": "Crowdsale._preValidatePurchase",
      "offset": [
        5474,
        5526
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29D"
    },
    "597": {
      "branch": 27,
      "fn": "Crowdsale._preValidatePurchase",
      "offset": [
        5474,
        5526
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "598": {
      "fn": "Crowdsale._preValidatePurchase",
      "offset": [
        5474,
        5526
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "600": {
      "fn": "Crowdsale._preValidatePurchase",
      "offset": [
        5474,
        5526
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "601": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "605": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "607": {
      "op": "SHL"
    },
    "608": {
      "fn": "Crowdsale._preValidatePurchase",
      "offset": [
        5474,
        5526
      ],
      "op": "DUP2",
      "path": "5"
    },
    "609": {
      "fn": "Crowdsale._preValidatePurchase",
      "offset": [
        5474,
        5526
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "610": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "612": {
      "fn": "Crowdsale._preValidatePurchase",
      "offset": [
        5474,
        5526
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "614": {
      "fn": "Crowdsale._preValidatePurchase",
      "offset": [
        5474,
        5526
      ],
      "op": "DUP3",
      "path": "5"
    },
    "615": {
      "fn": "Crowdsale._preValidatePurchase",
      "offset": [
        5474,
        5526
      ],
      "op": "ADD",
      "path": "5"
    },
    "616": {
      "op": "MSTORE"
    },
    "617": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "619": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "621": {
      "op": "DUP3"
    },
    "622": {
      "op": "ADD"
    },
    "623": {
      "op": "MSTORE"
    },
    "624": {
      "op": "PUSH32",
      "value": "0x43726F776473616C653A20776569416D6F756E74206973203000000000000000"
    },
    "657": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "659": {
      "op": "DUP3"
    },
    "660": {
      "op": "ADD"
    },
    "661": {
      "op": "MSTORE"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "664": {
      "op": "ADD"
    },
    "665": {
      "fn": "Crowdsale._preValidatePurchase",
      "offset": [
        5474,
        5526
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14E"
    },
    "668": {
      "op": "JUMP"
    },
    "669": {
      "fn": "Crowdsale._preValidatePurchase",
      "offset": [
        5474,
        5526
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "670": {
      "fn": "Crowdsale._preValidatePurchase",
      "offset": [
        5220,
        5666
      ],
      "op": "POP",
      "path": "5"
    },
    "671": {
      "fn": "Crowdsale._preValidatePurchase",
      "offset": [
        5220,
        5666
      ],
      "op": "POP",
      "path": "5"
    },
    "672": {
      "fn": "Crowdsale._preValidatePurchase",
      "jump": "o",
      "offset": [
        5220,
        5666
      ],
      "op": "JUMP",
      "path": "5"
    },
    "673": {
      "fn": "Crowdsale._getTokenAmount",
      "offset": [
        7711,
        7856
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "674": {
      "fn": "Crowdsale._getTokenAmount",
      "offset": [
        7802,
        7809
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "676": {
      "fn": "Crowdsale._getTokenAmount",
      "offset": [
        7844,
        7849
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 13,
      "value": "0x3"
    },
    "678": {
      "fn": "Crowdsale._getTokenAmount",
      "offset": [
        7844,
        7849
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "679": {
      "fn": "Crowdsale._getTokenAmount",
      "offset": [
        7832,
        7841
      ],
      "op": "DUP3",
      "path": "5"
    },
    "680": {
      "fn": "Crowdsale._getTokenAmount",
      "offset": [
        7832,
        7849
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B1"
    },
    "683": {
      "fn": "Crowdsale._getTokenAmount",
      "offset": [
        7832,
        7849
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "684": {
      "fn": "Crowdsale._getTokenAmount",
      "offset": [
        7832,
        7849
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "685": {
      "fn": "Crowdsale._getTokenAmount",
      "offset": [
        7832,
        7849
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x622"
    },
    "688": {
      "fn": "Crowdsale._getTokenAmount",
      "jump": "i",
      "offset": [
        7832,
        7849
      ],
      "op": "JUMP",
      "path": "5"
    },
    "689": {
      "fn": "Crowdsale._getTokenAmount",
      "offset": [
        7832,
        7849
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "690": {
      "fn": "Crowdsale._getTokenAmount",
      "offset": [
        7825,
        7849
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "691": {
      "fn": "Crowdsale._getTokenAmount",
      "offset": [
        7711,
        7856
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "692": {
      "op": "POP"
    },
    "693": {
      "op": "POP"
    },
    "694": {
      "fn": "Crowdsale._getTokenAmount",
      "jump": "o",
      "offset": [
        7711,
        7856
      ],
      "op": "JUMP",
      "path": "5"
    },
    "695": {
      "fn": "Crowdsale._processPurchase",
      "offset": [
        6857,
        7019
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "696": {
      "fn": "Crowdsale._processPurchase",
      "offset": [
        6972,
        7012
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 14,
      "value": "0x29D"
    },
    "699": {
      "fn": "Crowdsale._processPurchase",
      "offset": [
        6987,
        6998
      ],
      "op": "DUP3",
      "path": "5"
    },
    "700": {
      "fn": "Crowdsale._processPurchase",
      "offset": [
        7000,
        7011
      ],
      "op": "DUP3",
      "path": "5"
    },
    "701": {
      "fn": "Crowdsale._processPurchase",
      "offset": [
        6972,
        6986
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2FD"
    },
    "704": {
      "fn": "Crowdsale._processPurchase",
      "jump": "i",
      "offset": [
        6972,
        7012
      ],
      "op": "JUMP",
      "path": "5"
    },
    "705": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7943,
        8021
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "706": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        7994
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 15,
      "value": "0x2"
    },
    "708": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        7994
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "709": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "711": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "716": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "718": {
      "op": "SHL"
    },
    "719": {
      "op": "SUB"
    },
    "720": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        7994
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "721": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        7994
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "722": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        7994
      ],
      "op": "AND",
      "path": "5"
    },
    "723": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        7994
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "724": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        8004,
        8013
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "725": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "DUP1",
      "path": "5"
    },
    "726": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "727": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8FC"
    },
    "730": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "MUL",
      "path": "5"
    },
    "731": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "732": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        7994
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "734": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "DUP2",
      "path": "5"
    },
    "735": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        7994
      ],
      "op": "DUP2",
      "path": "5"
    },
    "736": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "DUP2",
      "path": "5"
    },
    "737": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        8004,
        8013
      ],
      "op": "DUP6",
      "path": "5"
    },
    "738": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        7994
      ],
      "op": "DUP9",
      "path": "5"
    },
    "739": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "DUP9",
      "path": "5"
    },
    "740": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "CALL",
      "path": "5"
    },
    "741": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "742": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "POP",
      "path": "5"
    },
    "743": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "POP",
      "path": "5"
    },
    "744": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "POP",
      "path": "5"
    },
    "745": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "POP",
      "path": "5"
    },
    "746": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "747": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "DUP1",
      "path": "5"
    },
    "748": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "749": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2FA"
    },
    "752": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "753": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "754": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "756": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "DUP1",
      "path": "5"
    },
    "757": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "758": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "759": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "761": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "REVERT",
      "path": "5"
    },
    "762": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "763": {
      "fn": "Crowdsale._forwardFunds",
      "offset": [
        7987,
        8014
      ],
      "op": "POP",
      "path": "5"
    },
    "764": {
      "fn": "Crowdsale._forwardFunds",
      "jump": "o",
      "offset": [
        7943,
        8021
      ],
      "op": "JUMP",
      "path": "5"
    },
    "765": {
      "fn": "Crowdsale._deliverTokens",
      "offset": [
        6426,
        6591
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "766": {
      "fn": "Crowdsale._deliverTokens",
      "offset": [
        6539,
        6545
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 16,
      "value": "0x1"
    },
    "768": {
      "fn": "Crowdsale._deliverTokens",
      "offset": [
        6539,
        6545
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "769": {
      "fn": "Crowdsale._deliverTokens",
      "offset": [
        6539,
        6584
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29D"
    },
    "772": {
      "fn": "Crowdsale._deliverTokens",
      "offset": [
        6539,
        6584
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "777": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "779": {
      "op": "SHL"
    },
    "780": {
      "op": "SUB"
    },
    "781": {
      "fn": "Crowdsale._deliverTokens",
      "offset": [
        6539,
        6545
      ],
      "op": "AND",
      "path": "5"
    },
    "782": {
      "fn": "Crowdsale._deliverTokens",
      "offset": [
        6559,
        6570
      ],
      "op": "DUP4",
      "path": "5"
    },
    "783": {
      "fn": "Crowdsale._deliverTokens",
      "offset": [
        6572,
        6583
      ],
      "op": "DUP4",
      "path": "5"
    },
    "784": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 17,
      "value": "0x40"
    },
    "786": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "791": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "793": {
      "op": "SHL"
    },
    "794": {
      "op": "SUB"
    },
    "795": {
      "op": "DUP4"
    },
    "796": {
      "op": "AND"
    },
    "797": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "799": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "2"
    },
    "800": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "2"
    },
    "801": {
      "op": "MSTORE"
    },
    "802": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "804": {
      "op": "DUP2"
    },
    "805": {
      "op": "ADD"
    },
    "806": {
      "op": "DUP3"
    },
    "807": {
      "op": "SWAP1"
    },
    "808": {
      "op": "MSTORE"
    },
    "809": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x371"
    },
    "812": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "813": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "DUP5",
      "path": "2"
    },
    "814": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "815": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "820": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "822": {
      "op": "SHL"
    },
    "823": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        886
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "824": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "826": {
      "op": "ADD"
    },
    "827": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "829": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "830": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "831": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "833": {
      "op": "NOT"
    },
    "834": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP2",
      "path": "2"
    },
    "835": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP5",
      "path": "2"
    },
    "836": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SUB",
      "path": "2"
    },
    "837": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "2"
    },
    "838": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP2",
      "path": "2"
    },
    "839": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "840": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "841": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "842": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "843": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "845": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP2",
      "path": "2"
    },
    "846": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "2"
    },
    "847": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "848": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "853": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "855": {
      "op": "SHL"
    },
    "856": {
      "op": "SUB"
    },
    "857": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "AND",
      "path": "2"
    },
    "858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "862": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "864": {
      "op": "SHL"
    },
    "865": {
      "op": "SUB"
    },
    "866": {
      "op": "NOT"
    },
    "867": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "868": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "869": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "AND",
      "path": "2"
    },
    "870": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "871": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "872": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "873": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "OR",
      "path": "2"
    },
    "874": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "875": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "876": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "877": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        832
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x376"
    },
    "880": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        813,
        899
      ],
      "op": "JUMP",
      "path": "2"
    },
    "881": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "882": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "2"
    },
    "883": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "2"
    },
    "884": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "2"
    },
    "885": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        701,
        906
      ],
      "op": "JUMP",
      "path": "2"
    },
    "886": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "887": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "889": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CB"
    },
    "892": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3680,
        3684
      ],
      "op": "DUP3",
      "path": "2"
    },
    "893": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "895": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "896": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "2"
    },
    "897": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "899": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "2"
    },
    "900": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "902": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "903": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "2"
    },
    "904": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "906": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "2"
    },
    "907": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "908": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "910": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "2"
    },
    "911": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "944": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "2"
    },
    "945": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "946": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "POP",
      "path": "2"
    },
    "947": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3660,
        3665
      ],
      "op": "DUP6",
      "path": "2"
    },
    "948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "954": {
      "op": "SHL"
    },
    "955": {
      "op": "SUB"
    },
    "956": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "AND",
      "path": "2"
    },
    "957": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x448"
    },
    "960": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "961": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "962": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "963": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "964": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "969": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "AND",
      "path": "2"
    },
    "970": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMP",
      "path": "2"
    },
    "971": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "972": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "DUP1",
      "path": "2"
    },
    "973": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "974": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "975": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "976": {
      "op": "POP"
    },
    "977": {
      "branch": 32,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3756
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "978": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x371"
    },
    "981": {
      "branch": 32,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "982": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3830,
        3840
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 18
    },
    "983": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP1",
      "path": "2"
    },
    "984": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "986": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "2"
    },
    "987": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "988": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "989": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP2",
      "path": "2"
    },
    "990": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "2"
    },
    "991": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "992": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E9"
    },
    "995": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "996": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "997": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x641"
    },
    "1000": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1001": {
      "branch": 33,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1002": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x371"
    },
    "1005": {
      "branch": 33,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1006": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1008": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1009": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1015": {
      "op": "SHL"
    },
    "1016": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1017": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1020": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1022": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1023": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "ADD",
      "path": "2"
    },
    "1024": {
      "op": "MSTORE"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1029": {
      "op": "DUP3"
    },
    "1030": {
      "op": "ADD"
    },
    "1031": {
      "op": "MSTORE"
    },
    "1032": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1067": {
      "op": "DUP3"
    },
    "1068": {
      "op": "ADD"
    },
    "1069": {
      "op": "MSTORE"
    },
    "1070": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "1083": {
      "op": "SHL"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1086": {
      "op": "DUP3"
    },
    "1087": {
      "op": "ADD"
    },
    "1088": {
      "op": "MSTORE"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1091": {
      "op": "ADD"
    },
    "1092": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14E"
    },
    "1095": {
      "op": "JUMP"
    },
    "1096": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1097": {
      "fn": "Address.functionCall",
      "offset": [
        3994,
        4006
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1099": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 19,
      "value": "0x457"
    },
    "1102": {
      "fn": "Address.functionCall",
      "offset": [
        4047,
        4053
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1103": {
      "fn": "Address.functionCall",
      "offset": [
        4055,
        4059
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1104": {
      "fn": "Address.functionCall",
      "offset": [
        4061,
        4062
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1106": {
      "fn": "Address.functionCall",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1107": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4046
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x461"
    },
    "1110": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1111": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1112": {
      "fn": "Address.functionCall",
      "offset": [
        4018,
        4077
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1113": {
      "fn": "Address.functionCall",
      "offset": [
        4018,
        4077
      ],
      "op": "POP",
      "path": "3"
    },
    "1114": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1115": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1116": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1117": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "3"
    },
    "1118": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "3"
    },
    "1119": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "POP",
      "path": "3"
    },
    "1120": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1121": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1122": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5113,
        5125
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1124": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5170,
        5175
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 20
    },
    "1125": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5166
      ],
      "op": "SELFBALANCE",
      "path": "3"
    },
    "1126": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "LT",
      "path": "3"
    },
    "1127": {
      "branch": 28,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1128": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4C2"
    },
    "1131": {
      "branch": 28,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1132": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1134": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1135": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1141": {
      "op": "SHL"
    },
    "1142": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1143": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1146": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1148": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1149": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "ADD",
      "path": "3"
    },
    "1150": {
      "op": "MSTORE"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1155": {
      "op": "DUP3"
    },
    "1156": {
      "op": "ADD"
    },
    "1157": {
      "op": "MSTORE"
    },
    "1158": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1193": {
      "op": "DUP3"
    },
    "1194": {
      "op": "ADD"
    },
    "1195": {
      "op": "MSTORE"
    },
    "1196": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "1205": {
      "op": "SHL"
    },
    "1206": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1208": {
      "op": "DUP3"
    },
    "1209": {
      "op": "ADD"
    },
    "1210": {
      "op": "MSTORE"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1213": {
      "op": "ADD"
    },
    "1214": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14E"
    },
    "1217": {
      "op": "JUMP"
    },
    "1218": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1225": {
      "op": "SHL"
    },
    "1226": {
      "op": "SUB"
    },
    "1227": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "DUP6",
      "path": "3",
      "statement": 21
    },
    "1228": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "AND",
      "path": "3"
    },
    "1229": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "1230": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 22,
      "value": "0x519"
    },
    "1233": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1234": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1236": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1237": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1243": {
      "op": "SHL"
    },
    "1244": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1245": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1248": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1250": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1251": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "ADD",
      "path": "3"
    },
    "1252": {
      "op": "MSTORE"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1255": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1257": {
      "op": "DUP3"
    },
    "1258": {
      "op": "ADD"
    },
    "1259": {
      "op": "MSTORE"
    },
    "1260": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1295": {
      "op": "DUP3"
    },
    "1296": {
      "op": "ADD"
    },
    "1297": {
      "op": "MSTORE"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1300": {
      "op": "ADD"
    },
    "1301": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14E"
    },
    "1304": {
      "op": "JUMP"
    },
    "1305": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1306": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5300,
        5312
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1308": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5314,
        5337
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1309": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5347
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1316": {
      "op": "SHL"
    },
    "1317": {
      "op": "SUB"
    },
    "1318": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5352
      ],
      "op": "AND",
      "path": "3"
    },
    "1319": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5360,
        5365
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1320": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5367,
        5371
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1321": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1323": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1324": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x535"
    },
    "1327": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1328": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1329": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x693"
    },
    "1332": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1333": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1334": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1336": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1338": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1339": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1340": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1341": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SUB",
      "path": "3"
    },
    "1342": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1343": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1344": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1345": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "GAS",
      "path": "3"
    },
    "1346": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "CALL",
      "path": "3"
    },
    "1347": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1348": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "1349": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "1350": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "1351": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1352": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1353": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1355": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1356": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "EQ",
      "path": "3"
    },
    "1357": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x572"
    },
    "1360": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1361": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1363": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1364": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1365": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "1366": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1368": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "NOT",
      "path": "3"
    },
    "1369": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "1371": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1372": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "3"
    },
    "1373": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "AND",
      "path": "3"
    },
    "1374": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1375": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "3"
    },
    "1376": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1378": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1379": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1380": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1381": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1382": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1383": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1385": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1387": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1388": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "3"
    },
    "1389": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1390": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x577"
    },
    "1393": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1394": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1395": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1397": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1398": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "1399": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1400": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "1401": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1402": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "1403": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1404": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "3"
    },
    "1405": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 23,
      "value": "0x587"
    },
    "1408": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5406,
        5413
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1409": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5415,
        5425
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1410": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5427,
        5439
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1411": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5405
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x592"
    },
    "1414": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1415": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1416": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5382,
        5440
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "1417": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "1418": {
      "op": "POP"
    },
    "1419": {
      "op": "POP"
    },
    "1420": {
      "op": "POP"
    },
    "1421": {
      "op": "POP"
    },
    "1422": {
      "op": "POP"
    },
    "1423": {
      "op": "POP"
    },
    "1424": {
      "op": "POP"
    },
    "1425": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1426": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7561,
        8253
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1427": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7707,
        7719
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1429": {
      "branch": 29,
      "fn": "Address.verifyCallResult",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1430": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1431": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5A1"
    },
    "1434": {
      "branch": 29,
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1435": {
      "op": "POP"
    },
    "1436": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7765,
        7775
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 24
    },
    "1437": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x45A"
    },
    "1440": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1441": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1442": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1443": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1444": {
      "branch": 30,
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7897
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1445": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5B1"
    },
    "1448": {
      "branch": 30,
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1449": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8070,
        8080
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1450": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8064,
        8081
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1451": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8130,
        8145
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1452": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8117,
        8127
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1453": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8113,
        8115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1455": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8109,
        8128
      ],
      "op": "ADD",
      "path": "3"
    },
    "1456": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8102,
        8146
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1457": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1458": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8209,
        8221
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 25
    },
    "1459": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1461": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1462": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1468": {
      "op": "SHL"
    },
    "1469": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1470": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1471": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1473": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "ADD",
      "path": "3"
    },
    "1474": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14E"
    },
    "1477": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1478": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1479": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6AF"
    },
    "1482": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        8202,
        8222
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1483": {
      "op": "JUMPDEST"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1488": {
      "op": "DUP3"
    },
    "1489": {
      "op": "DUP5"
    },
    "1490": {
      "op": "SUB"
    },
    "1491": {
      "op": "SLT"
    },
    "1492": {
      "op": "ISZERO"
    },
    "1493": {
      "op": "PUSH2",
      "value": "0x5DD"
    },
    "1496": {
      "op": "JUMPI"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1499": {
      "op": "DUP1"
    },
    "1500": {
      "op": "REVERT"
    },
    "1501": {
      "op": "JUMPDEST"
    },
    "1502": {
      "op": "DUP2"
    },
    "1503": {
      "op": "CALLDATALOAD"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1510": {
      "op": "SHL"
    },
    "1511": {
      "op": "SUB"
    },
    "1512": {
      "op": "DUP2"
    },
    "1513": {
      "op": "AND"
    },
    "1514": {
      "op": "DUP2"
    },
    "1515": {
      "op": "EQ"
    },
    "1516": {
      "op": "PUSH2",
      "value": "0x45A"
    },
    "1519": {
      "op": "JUMPI"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1522": {
      "op": "DUP1"
    },
    "1523": {
      "op": "REVERT"
    },
    "1524": {
      "op": "JUMPDEST"
    },
    "1525": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1532": {
      "op": "SHL"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1535": {
      "op": "MSTORE"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1540": {
      "op": "MSTORE"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1545": {
      "op": "REVERT"
    },
    "1546": {
      "op": "JUMPDEST"
    },
    "1547": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1549": {
      "op": "DUP3"
    },
    "1550": {
      "op": "NOT"
    },
    "1551": {
      "op": "DUP3"
    },
    "1552": {
      "op": "GT"
    },
    "1553": {
      "op": "ISZERO"
    },
    "1554": {
      "op": "PUSH2",
      "value": "0x61D"
    },
    "1557": {
      "op": "JUMPI"
    },
    "1558": {
      "op": "PUSH2",
      "value": "0x61D"
    },
    "1561": {
      "op": "PUSH2",
      "value": "0x5F4"
    },
    "1564": {
      "jump": "i",
      "op": "JUMP"
    },
    "1565": {
      "op": "JUMPDEST"
    },
    "1566": {
      "op": "POP"
    },
    "1567": {
      "op": "ADD"
    },
    "1568": {
      "op": "SWAP1"
    },
    "1569": {
      "jump": "o",
      "op": "JUMP"
    },
    "1570": {
      "op": "JUMPDEST"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1573": {
      "op": "DUP2"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1576": {
      "op": "NOT"
    },
    "1577": {
      "op": "DIV"
    },
    "1578": {
      "op": "DUP4"
    },
    "1579": {
      "op": "GT"
    },
    "1580": {
      "op": "DUP3"
    },
    "1581": {
      "op": "ISZERO"
    },
    "1582": {
      "op": "ISZERO"
    },
    "1583": {
      "op": "AND"
    },
    "1584": {
      "op": "ISZERO"
    },
    "1585": {
      "op": "PUSH2",
      "value": "0x63C"
    },
    "1588": {
      "op": "JUMPI"
    },
    "1589": {
      "op": "PUSH2",
      "value": "0x63C"
    },
    "1592": {
      "op": "PUSH2",
      "value": "0x5F4"
    },
    "1595": {
      "jump": "i",
      "op": "JUMP"
    },
    "1596": {
      "op": "JUMPDEST"
    },
    "1597": {
      "op": "POP"
    },
    "1598": {
      "op": "MUL"
    },
    "1599": {
      "op": "SWAP1"
    },
    "1600": {
      "jump": "o",
      "op": "JUMP"
    },
    "1601": {
      "op": "JUMPDEST"
    },
    "1602": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1604": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1606": {
      "op": "DUP3"
    },
    "1607": {
      "op": "DUP5"
    },
    "1608": {
      "op": "SUB"
    },
    "1609": {
      "op": "SLT"
    },
    "1610": {
      "op": "ISZERO"
    },
    "1611": {
      "op": "PUSH2",
      "value": "0x653"
    },
    "1614": {
      "op": "JUMPI"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1617": {
      "op": "DUP1"
    },
    "1618": {
      "op": "REVERT"
    },
    "1619": {
      "op": "JUMPDEST"
    },
    "1620": {
      "op": "DUP2"
    },
    "1621": {
      "op": "MLOAD"
    },
    "1622": {
      "op": "DUP1"
    },
    "1623": {
      "op": "ISZERO"
    },
    "1624": {
      "op": "ISZERO"
    },
    "1625": {
      "op": "DUP2"
    },
    "1626": {
      "op": "EQ"
    },
    "1627": {
      "op": "PUSH2",
      "value": "0x45A"
    },
    "1630": {
      "op": "JUMPI"
    },
    "1631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1633": {
      "op": "DUP1"
    },
    "1634": {
      "op": "REVERT"
    },
    "1635": {
      "op": "JUMPDEST"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1638": {
      "op": "JUMPDEST"
    },
    "1639": {
      "op": "DUP4"
    },
    "1640": {
      "op": "DUP2"
    },
    "1641": {
      "op": "LT"
    },
    "1642": {
      "op": "ISZERO"
    },
    "1643": {
      "op": "PUSH2",
      "value": "0x67E"
    },
    "1646": {
      "op": "JUMPI"
    },
    "1647": {
      "op": "DUP2"
    },
    "1648": {
      "op": "DUP2"
    },
    "1649": {
      "op": "ADD"
    },
    "1650": {
      "op": "MLOAD"
    },
    "1651": {
      "op": "DUP4"
    },
    "1652": {
      "op": "DUP3"
    },
    "1653": {
      "op": "ADD"
    },
    "1654": {
      "op": "MSTORE"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1657": {
      "op": "ADD"
    },
    "1658": {
      "op": "PUSH2",
      "value": "0x666"
    },
    "1661": {
      "op": "JUMP"
    },
    "1662": {
      "op": "JUMPDEST"
    },
    "1663": {
      "op": "DUP4"
    },
    "1664": {
      "op": "DUP2"
    },
    "1665": {
      "op": "GT"
    },
    "1666": {
      "op": "ISZERO"
    },
    "1667": {
      "op": "PUSH2",
      "value": "0x68D"
    },
    "1670": {
      "op": "JUMPI"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1673": {
      "op": "DUP5"
    },
    "1674": {
      "op": "DUP5"
    },
    "1675": {
      "op": "ADD"
    },
    "1676": {
      "op": "MSTORE"
    },
    "1677": {
      "op": "JUMPDEST"
    },
    "1678": {
      "op": "POP"
    },
    "1679": {
      "op": "POP"
    },
    "1680": {
      "op": "POP"
    },
    "1681": {
      "op": "POP"
    },
    "1682": {
      "jump": "o",
      "op": "JUMP"
    },
    "1683": {
      "op": "JUMPDEST"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1686": {
      "op": "DUP3"
    },
    "1687": {
      "op": "MLOAD"
    },
    "1688": {
      "op": "PUSH2",
      "value": "0x6A5"
    },
    "1691": {
      "op": "DUP2"
    },
    "1692": {
      "op": "DUP5"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1695": {
      "op": "DUP8"
    },
    "1696": {
      "op": "ADD"
    },
    "1697": {
      "op": "PUSH2",
      "value": "0x663"
    },
    "1700": {
      "jump": "i",
      "op": "JUMP"
    },
    "1701": {
      "op": "JUMPDEST"
    },
    "1702": {
      "op": "SWAP2"
    },
    "1703": {
      "op": "SWAP1"
    },
    "1704": {
      "op": "SWAP2"
    },
    "1705": {
      "op": "ADD"
    },
    "1706": {
      "op": "SWAP3"
    },
    "1707": {
      "op": "SWAP2"
    },
    "1708": {
      "op": "POP"
    },
    "1709": {
      "op": "POP"
    },
    "1710": {
      "jump": "o",
      "op": "JUMP"
    },
    "1711": {
      "op": "JUMPDEST"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1714": {
      "op": "DUP2"
    },
    "1715": {
      "op": "MSTORE"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1718": {
      "op": "DUP3"
    },
    "1719": {
      "op": "MLOAD"
    },
    "1720": {
      "op": "DUP1"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1723": {
      "op": "DUP5"
    },
    "1724": {
      "op": "ADD"
    },
    "1725": {
      "op": "MSTORE"
    },
    "1726": {
      "op": "PUSH2",
      "value": "0x6CE"
    },
    "1729": {
      "op": "DUP2"
    },
    "1730": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1732": {
      "op": "DUP6"
    },
    "1733": {
      "op": "ADD"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1736": {
      "op": "DUP8"
    },
    "1737": {
      "op": "ADD"
    },
    "1738": {
      "op": "PUSH2",
      "value": "0x663"
    },
    "1741": {
      "jump": "i",
      "op": "JUMP"
    },
    "1742": {
      "op": "JUMPDEST"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1745": {
      "op": "ADD"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1748": {
      "op": "NOT"
    },
    "1749": {
      "op": "AND"
    },
    "1750": {
      "op": "SWAP2"
    },
    "1751": {
      "op": "SWAP1"
    },
    "1752": {
      "op": "SWAP2"
    },
    "1753": {
      "op": "ADD"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1756": {
      "op": "ADD"
    },
    "1757": {
      "op": "SWAP3"
    },
    "1758": {
      "op": "SWAP2"
    },
    "1759": {
      "op": "POP"
    },
    "1760": {
      "op": "POP"
    },
    "1761": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "f66de870a1c353686c0e0a213a1361ff69265411",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/**\n * @title Crowdsale\n * @dev Crowdsale is a base contract for managing a token crowdsale,\n * allowing investors to purchase tokens with ether. This contract implements\n * such functionality in its most fundamental form and can be extended to provide additional\n * functionality and/or custom behavior.\n * The external interface represents the basic interface for purchasing tokens, and conforms\n * the base architecture for crowdsales. It is *not* intended to be modified / overridden.\n * The internal interface conforms the extensible and modifiable surface of crowdsales. Override\n * the methods to add functionality. Consider using 'super' where appropriate to concatenate\n * behavior.\n */\ncontract Crowdsale is Context, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    // The token being sold\n    IERC20 private _token;\n\n    // Address where funds are collected\n    address payable private _wallet;\n\n    // How many token units a buyer gets per wei.\n    // The rate is the conversion between wei and the smallest and indivisible token unit.\n    // So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK\n    // 1 wei will give you 1 unit, or 0.001 TOK.\n    uint256 private _rate;\n\n    // Amount of wei raised\n    uint256 private _weiRaised;\n\n    /**\n     * Event for token purchase logging\n     * @param purchaser who paid for the tokens\n     * @param beneficiary who got the tokens\n     * @param value weis paid for purchase\n     * @param amount amount of tokens purchased\n     */\n    event TokensPurchased(\n        address indexed purchaser,\n        address indexed beneficiary,\n        uint256 value,\n        uint256 amount\n    );\n\n    /**\n     * @param rate Number of token units a buyer gets per wei\n     * @dev The rate is the conversion between wei and the smallest and indivisible\n     * token unit. So, if you are using a rate of 1 with a ERC20Detailed token\n     * with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\n     * @param wallet Address where collected funds will be forwarded to\n     * @param token Address of the token being sold\n     */\n    constructor(\n        uint256 rate,\n        address payable wallet,\n        IERC20 token\n    ) public {\n        require(rate > 0, \"Crowdsale: rate is 0\");\n        require(wallet != address(0), \"Crowdsale: wallet is the zero address\");\n        require(\n            address(token) != address(0),\n            \"Crowdsale: token is the zero address\"\n        );\n\n        _rate = rate;\n        _wallet = wallet;\n        _token = token;\n    }\n\n    /**\n     * @dev fallback function ***DO NOT OVERRIDE***\n     * Note that other contracts will transfer funds with a base gas stipend\n     * of 2300, which is not enough to call buyTokens. Consider calling\n     * buyTokens directly when purchasing tokens from a contract.\n     */\n    receive() external payable {\n        buyTokens(_msgSender());\n    }\n\n    /**\n     * @return the token being sold.\n     */\n    function token_() public view returns (IERC20) {\n        return _token;\n    }\n\n    /**\n     * @return the address where funds are collected.\n     */\n    function wallet_() public view returns (address payable) {\n        return _wallet;\n    }\n\n    /**\n     * @return the number of token units a buyer gets per wei.\n     */\n    function rate_() public view returns (uint256) {\n        return _rate;\n    }\n\n    /**\n     * @return the amount of wei raised.\n     */\n    function weiRaised() public view returns (uint256) {\n        return _weiRaised;\n    }\n\n    /**\n     * @dev low level token purchase ***DO NOT OVERRIDE***\n     * This function has a non-reentrancy guard, so it shouldn't be called by\n     * another `nonReentrant` function.\n     * @param beneficiary Recipient of the token purchase\n     */\n    function buyTokens(address beneficiary) public payable nonReentrant {\n        uint256 weiAmount = msg.value;\n        _preValidatePurchase(beneficiary, weiAmount);\n\n        // calculate token amount to be created\n        uint256 tokens = _getTokenAmount(weiAmount);\n\n        // update state\n        _weiRaised = _weiRaised + weiAmount;\n\n        _processPurchase(beneficiary, tokens);\n        emit TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens);\n\n        _updatePurchasingState(beneficiary, weiAmount);\n\n        _forwardFunds();\n        _postValidatePurchase(beneficiary, weiAmount);\n    }\n\n    /**\n     * @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\n     * Use `super` in contracts that inherit from Crowdsale to extend their validations.\n     * Example from CappedCrowdsale.sol's _preValidatePurchase method:\n     *     super._preValidatePurchase(beneficiary, weiAmount);\n     *     require(weiRaised().add(weiAmount) <= cap);\n     * @param beneficiary Address performing the token purchase\n     * @param weiAmount Value in wei involved in the purchase\n     */\n    function _preValidatePurchase(address beneficiary, uint256 weiAmount)\n        internal\n        view\n        virtual\n    {\n        require(\n            beneficiary != address(0),\n            \"Crowdsale: beneficiary is the zero address\"\n        );\n        require(weiAmount != 0, \"Crowdsale: weiAmount is 0\");\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    }\n\n    /**\n     * @dev Validation of an executed purchase. Observe state and use revert statements to undo rollback when valid\n     * conditions are not met.\n     * @param beneficiary Address performing the token purchase\n     * @param weiAmount Value in wei involved in the purchase\n     */\n    function _postValidatePurchase(address beneficiary, uint256 weiAmount)\n        internal\n        view\n        virtual\n    {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n\n    /**\n     * @dev Source of tokens. Override this method to modify the way in which the crowdsale ultimately gets and sends\n     * its tokens.\n     * @param beneficiary Address performing the token purchase\n     * @param tokenAmount Number of tokens to be emitted\n     */\n    function _deliverTokens(address beneficiary, uint256 tokenAmount)\n        internal\n        virtual\n    {\n        _token.safeTransfer(beneficiary, tokenAmount);\n    }\n\n    /**\n     * @dev Executed when a purchase has been validated and is ready to be executed. Doesn't necessarily emit/send\n     * tokens.\n     * @param beneficiary Address receiving the tokens\n     * @param tokenAmount Number of tokens to be purchased\n     */\n    function _processPurchase(address beneficiary, uint256 tokenAmount)\n        internal\n        virtual\n    {\n        _deliverTokens(beneficiary, tokenAmount);\n    }\n\n    /**\n     * @dev Override for extensions that require an internal state to check for validity (current user contributions,\n     * etc.)\n     * @param beneficiary Address receiving the tokens\n     * @param weiAmount Value in wei involved in the purchase\n     */\n    function _updatePurchasingState(address beneficiary, uint256 weiAmount)\n        internal\n        virtual\n    {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n\n    /**\n     * @dev Override to extend the way in which ether is converted to tokens.\n     * @param weiAmount Value in wei to be converted into tokens\n     * @return Number of tokens that can be purchased with the specified _weiAmount\n     */\n    function _getTokenAmount(uint256 weiAmount)\n        internal\n        view\n        returns (uint256)\n    {\n        return weiAmount * _rate;\n    }\n\n    /**\n     * @dev Determines how ETH is stored/forwarded on purchases.\n     */\n    function _forwardFunds() internal {\n        _wallet.transfer(msg.value);\n    }\n}\n",
  "sourceMap": "992:7031:5:-:0;;;2421:433;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:0;1806:7;:22;2540:8:5;2532:41;;;;-1:-1:-1;;;2532:41:5;;849:2:7;2532:41:5;;;831:21:7;888:2;868:18;;;861:30;927:22;907:18;;;900:50;967:18;;2532:41:5;;;;;;;;;-1:-1:-1;;;;;2591:20:5;;2583:70;;;;-1:-1:-1;;;2583:70:5;;1198:2:7;2583:70:5;;;1180:21:7;1237:2;1217:18;;;1210:30;1276:34;1256:18;;;1249:62;-1:-1:-1;;;1327:18:7;;;1320:35;1372:19;;2583:70:5;996:401:7;2583:70:5;-1:-1:-1;;;;;2684:28:5;;2663:111;;;;-1:-1:-1;;;2663:111:5;;1604:2:7;2663:111:5;;;1586:21:7;1643:2;1623:18;;;1616:30;1682:34;1662:18;;;1655:62;-1:-1:-1;;;1733:18:7;;;1726:34;1777:19;;2663:111:5;1402:400:7;2663:111:5;2785:5;:12;;;;2807:7;:16;;-1:-1:-1;;;;;2807:16:5;;;-1:-1:-1;;;;;;2807:16:5;;;;;;;-1:-1:-1;2833:14:5;;;;;;;;;;;992:7031;;14:139:7;-1:-1:-1;;;;;97:31:7;;87:42;;77:70;;143:1;140;133:12;77:70;14:139;:::o;158:484::-;268:6;276;284;337:2;325:9;316:7;312:23;308:32;305:52;;;353:1;350;343:12;305:52;382:9;376:16;366:26;;435:2;424:9;420:18;414:25;448:39;481:5;448:39;:::i;:::-;556:2;541:18;;535:25;506:5;;-1:-1:-1;569:41:7;535:25;569:41;:::i;:::-;629:7;619:17;;;158:484;;;;;:::o;1402:400::-;992:7031:5;;;;;;",
  "sourcePath": "contracts/Crowdsale.sol",
  "type": "contract"
}